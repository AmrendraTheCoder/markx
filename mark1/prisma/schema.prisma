// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Category {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String?
}

// model Item {
//   id           String   @id @default(auto()) @map("_id") @db.ObjectId
//   name         String
//   description  String?
//   category     Category @relation(fields: [categoryId], references: [id])
//   categoryId   Int
//   sku          String   @unique
//   barcode      String?
//   quantity     Int
//   unit         Unit     @relation(fields: [unitId], references: [id])
//   unitId       Int
//   brand        Brand    @relation(fields: [brandId], references: [id])
//   brandId      Int
//   unitPrice    Float
//   costPrice    Float
//   supplier     String
//   reorderPoint Int
//   location     String?
//   images       String[] @db.StringArray
//   weight       Float?
//   dimensions   String?
//   taxRate      Float
//   notes        String?
// }

model Unit {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  title        String
  abbreviation String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Brand {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  title String
}

model Warehouse {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  location    String?
  description String?
  warehouseType        String
}

// model AddStockAdjustment {
//   id            String  @id @default(auto()) @map("_id") @db.ObjectId
//   addStockQty       Int
//   receivingWarehouseId String
//   location      String?
//   description   String?
//   type String
// }
